// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/service/token.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
reflect "reflect"

gomock "github.com/golang/mock/gomock"
uuid "github.com/google/uuid"
)

// MockTokenServiceInterface is a mock of TokenServiceInterface interface.
type MockTokenServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTokenServiceInterfaceMockRecorder
}

// MockTokenServiceInterfaceMockRecorder is the mock recorder for MockTokenServiceInterface.
type MockTokenServiceInterfaceMockRecorder struct {
	mock *MockTokenServiceInterface
}

// NewMockTokenServiceInterface creates a new mock instance.
func NewMockTokenServiceInterface(ctrl *gomock.Controller) *MockTokenServiceInterface {
	mock := &MockTokenServiceInterface{ctrl: ctrl}
	mock.recorder = &MockTokenServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenServiceInterface) EXPECT() *MockTokenServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateToken mocks base method.
func (m *MockTokenServiceInterface) CreateToken(symbol string, price float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToken", symbol, price)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateToken indicates an expected call of CreateToken.
func (mr *MockTokenServiceInterfaceMockRecorder) CreateToken(symbol, price interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToken", reflect.TypeOf((*MockTokenServiceInterface)(nil).CreateToken), symbol, price)
}

// DeleteToken mocks base method.
func (m *MockTokenServiceInterface) DeleteToken(tokenaddress uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteToken", tokenaddress)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteToken indicates an expected call of DeleteToken.
func (mr *MockTokenServiceInterfaceMockRecorder) DeleteToken(tokenaddress interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteToken", reflect.TypeOf((*MockTokenServiceInterface)(nil).DeleteToken), tokenaddress)
}

// UpdateToken mocks base method.
func (m *MockTokenServiceInterface) UpdateToken(address uuid.UUID, symbol string, price float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateToken", address, symbol, price)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateToken indicates an expected call of UpdateToken.
func (mr *MockTokenServiceInterfaceMockRecorder) UpdateToken(address, symbol, price interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateToken", reflect.TypeOf((*MockTokenServiceInterface)(nil).UpdateToken), address, symbol, price)
}
